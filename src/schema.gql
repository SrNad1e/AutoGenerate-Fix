# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddConfigInput {
  data: [DataInput!]!
  description: String!
  module: String!
  name: String!
  title: String!
}

type Color {
  """Identificador de mongo"""
  _id: String!

  """Estado del color"""
  active: Boolean!

  """Color en formato html"""
  html: String!

  """Identificador del color mysql"""
  id: Float @deprecated(reason: "Campo para migración de mysql")

  """Url relativo de la imagen"""
  image: String

  """Nombre del color"""
  name: String!

  """Nombre interno del color"""
  name_internal: String!
}

type Configs {
  createdAt: DateTime!
  data: [Data!]!
  description: String!
  name: String!
  title: String!
  updatedAt: DateTime!
}

type Configuration {
  _id: ID!
  configs: [Configs!]!
  module: String!
}

input CreateStockRequestInput {
  """Productos de la solicitud"""
  details: [DetailStockRequestInput!]!

  """Observación de la solicitud"""
  observation: String

  """Estado de la solicitud (open, pending, used, cancelled )"""
  status: String

  """Identificador de la bodega de destino de la solicitud"""
  warehouseDestinationId: String!

  """Identificador de la bodega de origen de la solicitud"""
  warehouseOriginId: String!
}

input CreateStockTransferInput {
  """Productos del traslado"""
  details: [DetailStockTransferInput!]!

  """Observación del que realiza el traslado"""
  observationOrigin: String

  """Solicitudes usadas"""
  requests: [String!]

  """Estado del traslado (open, sent, confirmed, incomplete, cancelled)"""
  status: String

  """Identificador de la bodega de destino del traslado"""
  warehouseDestinationId: String!

  """Identificador de la bodega de origen del traslado"""
  warehouseOriginId: String!
}

input CreateUserInput {
  """Nombre del usuario"""
  name: String!

  """Contraseña de usuario"""
  password: String!

  """Rol asignado al usuario"""
  role: String!

  """Usuario registrado"""
  username: String!
}

type Data {
  name: String!
  type: String!
  value: String!
}

input DataInput {
  name: String!
  type: String!
  value: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DetailRequest {
  """Fecha de agregado del producto a la solicitud"""
  createdAt: DateTime!

  """Producto de la solicitud"""
  product: Product!

  """Cantidad de la solicfitud"""
  quantity: Float!

  """Fecha de actualizado del producto a la solicitud"""
  updateAt: DateTime!
}

input DetailStockRequestInput {
  """Acción a efectuar con el producto (delete, update, create)"""
  action: String

  """Identificador de mongo del producto"""
  productId: String!

  """Cantidad de productos"""
  quantity: Float!
}

input DetailStockTransferInput {
  """Acción a efectuar con el producto (delete, update, create)"""
  action: String

  """Identificador de mongo del producto"""
  productId: String!

  """Cantidad de productos"""
  quantity: Float!
}

type DetailTransfer {
  """Fecha de agregado el producto"""
  createdAt: DateTime!

  """Producto del detalle"""
  product: Product!

  """Cantidad del productos en el traslado"""
  quantity: Float!

  """Cantidad del productos confirmados en el traslado"""
  quantityConfirmed: Float

  """Estado del producto (confirmed, new)"""
  status: String!

  """Fecha de actualizacion el producto"""
  updateAt: DateTime!
}

input FiltersColorInput {
  """Estado de la bodega"""
  active: Boolean

  """Cantidad de registros"""
  limit: Float

  """Comodín busqueda del color"""
  name: String

  """Página"""
  skip: Float

  """Ordenamiento"""
  sort: SortColor
}

input FiltersProductInput {
  """Identificador de mongo"""
  _id: String

  """Código de barras producto"""
  barcode: String

  """Descripción del producto"""
  description: String

  """Referencia del producto"""
  reference: String
}

input FiltersProductsInput {
  """Id de color"""
  colorId: String

  """Identificadores de mongo"""
  ids: [String!]

  """Cantidad de registros"""
  limit: Float

  """Comodín para la busqueda del producto, barcode, referencem description"""
  name: String

  """Id de talla"""
  sizeId: String

  """Desde donde arranca la página"""
  skip: Float

  """Ordenamiento"""
  sort: SortProduct

  """Estado del producto"""
  status: String
}

input FiltersSizeInput {
  """Estado de la bodega"""
  active: Boolean

  """Cantidad de registros"""
  limit: Float

  """Comodín busqueda de la talla"""
  name: String

  """Página"""
  skip: Float

  """Ordenamiento"""
  sort: SortSize
}

input FiltersStockRequestInput {
  """Cantidad de registros"""
  limit: Float

  """Número consecutivo asignado al traslado"""
  number: Float

  """Desde donde arranca la página"""
  skip: Float

  """Ordenamiento (1 es ascendente, -1 es descendente)"""
  sort: SortStockRequest

  """Estado de la solicitud (open, pending, cancel, used)"""
  status: String

  """Id de la bodega de destino"""
  warehouseDestinationId: String

  """Id de la bodega de origen"""
  warehouseOriginId: String
}

input FiltersStockTransferInput {
  """Cantidad de registros"""
  limit: Float

  """Número consecutivo asignado al traslado"""
  number: Float

  """Desde donde arranca la página"""
  skip: Float

  """Ordenamiento (1 es ascendente, -1 es descendente)"""
  sort: SortStockTransfer

  """Estado del traslado (open, sent, confirmed, incomplete, cancelled)"""
  status: String

  """Id de la bodega de destino"""
  warehouseDestinationId: String

  """Id de la bodega de origen"""
  warehouseOriginId: String
}

input FiltersWarehouseInput {
  """Estado de la bodega"""
  active: Boolean

  """Comodín busqueda de la bodega"""
  name: String
}

type LoginResponse {
  access_token: String!
  user: User!
}

input LoginUserInput {
  """Contraseña de usuario"""
  password: String!

  """Usuario registrado"""
  username: String!
}

type Mutation {
  addConfi(addConfigData: AddConfigInput!): Configuration!
  confirmDetailStockTransfer(id: String!, updateStockTransferInput: DetailStockTransferInput!): StockTransfer!
  createStockRequest(createStockRequestInput: CreateStockRequestInput!): StockRequest!
  createStockTransfer(createStockTransferInput: CreateStockTransferInput!): StockTransfer!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  signup(createUserInput: CreateUserInput!): User!
  updateStockRequest(id: String!, updateStockRequestInput: UpdateStockRequestInput!): StockRequest!
  updateStockTransfer(id: String!, updateStockTransferInput: UpdateStockTransferInput!): StockTransfer!
  updateUser(id: String!, updateUserInput: UpdateUserInput!): User!
}

type Permission {
  """Identificador de mongo"""
  _id: String!

  """Tipo de acción crud que genera acceso"""
  action: String!

  """Detalle de la acción"""
  description: String!

  """módulo al que perteneces el permiso"""
  module: String!

  """Nombre de la acción"""
  name: String!

  """Título de la acción"""
  title: String!
}

type Product {
  """Identificador de mongo"""
  _id: String!

  """Código de barras del producto"""
  barcode: String!

  """Determina si el producto se puede cambiar"""
  changeable: Boolean!

  """Color del producto"""
  color: Color!

  """Costo del producto"""
  cost: Float!

  """Descripción del producto"""
  description: String!

  """Identificador de mysql"""
  id: Float @deprecated(reason: "Campo para migración de mysql")

  """Precio del producto"""
  price: Float!

  """Fabricante del producto"""
  provider: Provider!

  """Referencia del producto"""
  reference: String!

  """Medidas del producto"""
  shipping: Shipping!

  """Talla del producto"""
  size: Size!

  """Estado del producto"""
  status: String!

  """Inventario del producto por bodegas"""
  stock: [Stock!]!

  """Usuario que crea el producto"""
  user: User!
}

type Provider {
  """Identificador de mongo"""
  _id: String!

  """Estado del proveedor"""
  active: Boolean!

  """Id de mysql"""
  id: Boolean @deprecated(reason: "Campo para migración de mysql")

  """Nombre del proveedor"""
  name: String!
}

type Query {
  colors(filtersColorInput: FiltersColorInput = {}): ResponseColor!
  configuration(module: String!): Configuration
  currentUser: User!
  getAll: [Configuration!]!
  getForName(module: String!, name: String!): Configuration!
  product(filtersProductInput: FiltersProductInput = {}): Product!
  products(filtersProductsInput: FiltersProductsInput = {}): ResponseProduct!
  reportSales(year: Float!): [ReportSalesResponse!]!
  sizes(filtersSizeInput: FiltersSizeInput = {}): ResponseSize!
  stockRequestId(id: String!): StockRequest!
  stockRequests(filtersStockRequestInput: FiltersStockRequestInput = {}): ResponseStockRequest!
  stockTransferId(id: String!): StockTransfer!
  stockTransfers(filtersStockTransferInput: FiltersStockTransferInput = {}): ResponseStockTransfer!
  user(username: String!): User!
  users: [User!]!
  warehouses(filtersWarehouseInput: FiltersWarehouseInput = {}): [Warehouse!]!
}

type ReportSalesResponse {
  shop: Shop!
  weeks: [Float!]!
}

type ResponseColor {
  """Lista de colores"""
  docs: [Color!]!

  """¿Encuentra página siguiente?"""
  hasNextPage: Boolean!

  """¿Encuentra página anterior?"""
  hasPrevPage: Boolean!

  """Total de docuementos solicitados"""
  limit: Float!

  """Página siguente"""
  nextPage: Float!

  """Página actual"""
  page: Float!

  """"""
  pagingCounter: Float!

  """Página anterior"""
  prevPage: Float!

  """Total de documentos"""
  totalDocs: Float!

  """Total de páginas"""
  totalPages: Float!
}

type ResponseProduct {
  """Lista de productos"""
  docs: [Product!]!

  """¿Encuentra página siguiente?"""
  hasNextPage: Boolean!

  """¿Encuentra página anterior?"""
  hasPrevPage: Boolean!

  """Total de docuementos solicitados"""
  limit: Float!

  """Página siguente"""
  nextPage: Float!

  """Página actual"""
  page: Float!

  """"""
  pagingCounter: Float!

  """Página anterior"""
  prevPage: Float!

  """Total de documentos"""
  totalDocs: Float!

  """Total de páginas"""
  totalPages: Float!
}

type ResponseSize {
  """Lista de tallas"""
  docs: [Size!]!

  """¿Encuentra página siguiente?"""
  hasNextPage: Boolean!

  """¿Encuentra página anterior?"""
  hasPrevPage: Boolean!

  """Total de docuementos solicitados"""
  limit: Float!

  """Página siguente"""
  nextPage: Float!

  """Página actual"""
  page: Float!

  """"""
  pagingCounter: Float!

  """Página anterior"""
  prevPage: Float!

  """Total de documentos"""
  totalDocs: Float!

  """Total de páginas"""
  totalPages: Float!
}

type ResponseStockRequest {
  """Lista de solicitudes"""
  docs: [StockRequest!]!

  """¿Encuentra página siguiente?"""
  hasNextPage: Boolean!

  """¿Encuentra página anterior?"""
  hasPrevPage: Boolean!

  """Total de docuementos solicitados"""
  limit: Float!

  """Página siguente"""
  nextPage: Float!

  """Página actual"""
  page: Float!

  """"""
  pagingCounter: Float!

  """Página anterior"""
  prevPage: Float!

  """Total de documentos"""
  totalDocs: Float!

  """Total de páginas"""
  totalPages: Float!
}

type ResponseStockTransfer {
  """Lista de traslados"""
  docs: [StockTransfer!]!

  """¿Encuentra página siguiente?"""
  hasNextPage: Boolean!

  """¿Encuentra página anterior?"""
  hasPrevPage: Boolean!

  """Total de docuementos solicitados"""
  limit: Float!

  """Página siguente"""
  nextPage: Float!

  """Página actual"""
  page: Float!

  """"""
  pagingCounter: Float!

  """Página anterior"""
  prevPage: Float!

  """Total de documentos"""
  totalDocs: Float!

  """Total de páginas"""
  totalPages: Float!
}

type Role {
  """Identificador de mongo"""
  _id: String!

  """Fecha de creación del rol"""
  createdAt: DateTime!

  """Nombre asiganado al rol"""
  name: String!

  """Permisos al los quie tiene el rol"""
  permissions: [Permission!]!

  """Fecha en la que se actualizó el rol"""
  updatedAt: DateTime!

  """Usuario que creó o modificó el rol"""
  user: User!
}

type Shipping {
  """Alto del producto"""
  height: Float!

  """Largo del producto"""
  long: Float!

  """Volumen del producto"""
  volume: Float!

  """Peso del producto"""
  weight: Float!

  """Ancho del producto"""
  width: Float!
}

type Shop {
  """Identificador de mongo"""
  _id: String!
  address: String!

  """Bodega predeterminada para la tienda"""
  defaultWarehouse: Warehouse
  goal: Float!
  name: String!
  phone: String!
  shopId: Float!
  status: String!
  user: UserMysql!
}

type Size {
  """Identificador de mongo"""
  _id: String!

  """Estado de la talla"""
  active: Boolean!

  """Identificador mysql"""
  id: Float @deprecated(reason: "Campo para migración de mysql")

  """Valor de la talla"""
  value: String!
}

input SortColor {
  active: Float
  createdAt: Float
  name: Float
  name_internal: Float
  updatedAt: Float
}

input SortProduct {
  barcode: Float
  changeable: Float
  cost: Float
  description: Float
  price: Float
  reference: Float
  status: Float
}

input SortSize {
  active: Float
  createdAt: Float
  updatedAt: Float
  value: Float
}

input SortStockRequest {
  """Ordenamiento por fecha de creación"""
  createdAt: Float

  """Ordenamiento por número"""
  number: Float

  """Ordenamiento por estado"""
  status: Float

  """Ordenamiento por fecha de actualización"""
  updateAt: Float

  """Ordenamiento por bodega de destino"""
  warehouseDestination: Float

  """Ordenamiento por bodega de origen"""
  warehouseOrigin: Float
}

input SortStockTransfer {
  """Ordenamiento por fecha de creación"""
  createdAt: Float

  """Ordenamiento por número"""
  number: Float

  """Ordenamiento por estado"""
  status: Float

  """Ordenamiento por fecha de actualización"""
  updateAt: Float

  """Ordenamiento por bodega de destino"""
  warehouseDestination: Float

  """Ordenamiento por bodega de origen"""
  warehouseOrigin: Float
}

type Stock {
  """Cantidad de productos en la bodega"""
  quantity: Float!

  """Identificador de la bodega"""
  warehouse: Warehouse!
}

type StockRequest {
  """Identificador de mongo"""
  _id: String!

  """Usuario que crea la solicitud"""
  code: String @deprecated(reason: "Migración mysql")

  """Fecha de creación de la solicitud"""
  createdAt: DateTime!

  """Detalles de la solicitud"""
  details: [DetailRequest!]!

  """Número consecutivo de identificación"""
  number: Float!

  """Observación de la solicitud"""
  observation: String

  """Estado de la solicitud (open, pending, used, cancelled )"""
  status: String!

  """Fecha de la última actulización de la solicitud"""
  updatedAt: DateTime!

  """Usuario que crea la solicitud"""
  user: User!

  """Bodega de destino de la solicitud"""
  warehouseDestination: Warehouse!

  """Bodega de origen de la solicitud"""
  warehouseOrigin: Warehouse!
}

type StockTransfer {
  """Identificador de mongo"""
  _id: String!

  """Fecha de creación del traslado"""
  createdAt: DateTime!

  """Detalle de los productos"""
  details: [DetailTransfer!]!

  """Consecutivo del traslado"""
  number: Float!

  """Observación general"""
  observation: String

  """Observación del que crea el traslado"""
  observationDestination: String

  """Observación del que crea el traslado"""
  observationOrigin: String

  """Solicitudes usadas"""
  requests: [StockRequest!]

  """
  Estado del traslado (open, sent, confirmed, incomplete, cancelled, verified )
  """
  status: String!

  """Fecha de actualización del traslado"""
  updatedAt: DateTime!

  """Usuario de destino del traslado"""
  userDestination: User

  """Usuario de origen del traslado"""
  userOrigin: User!

  """Bodega de origen del traslado"""
  warehouseDestination: Warehouse!

  """Bodega de origen del traslado"""
  warehouseOrigin: Warehouse!
}

input UpdateStockRequestInput {
  """Productos de la solicitud"""
  details: [DetailStockRequestInput!]

  """Observación de la solicitud"""
  observation: String

  """Estado de la solicitud (open, pending, used, cancelled )"""
  status: String
}

input UpdateStockTransferInput {
  """Productos del traslado"""
  details: [DetailStockTransferInput!]

  """Observación general"""
  observation: String

  """Observación del que recibe el traslado"""
  observationDestination: String

  """Observación del que envía el traslado"""
  observationOrigin: String

  """Solicitudes usadas"""
  requests: [String!]

  """Estado del traslado (open, sent, confirmed, incomplete, cancelled)"""
  status: String
}

input UpdateUserInput {
  """Nombre del usuario"""
  name: String

  """Contraseña de usuario"""
  password: String

  """Rol asignado al usuario"""
  role: String

  """Usuario registrado"""
  username: String
}

type User {
  """Identificador de mongo"""
  _id: String!

  """Nombre de usuario"""
  createdAt: DateTime!

  """Id de mysql"""
  id: User @deprecated(reason: "Id para migración")

  """Nombre de la persona que usa el usuario"""
  name: String!

  """Contraseña de usuario"""
  password: String

  """Rol que ocupa el usuario"""
  role: Role!

  """Tienda a la que se encuentra asiganado el usuario"""
  shop: Shop!

  """Nombre de usuario"""
  updateAt: DateTime!

  """Usuario que creó el usuario"""
  user: User!

  """Nombre de usuario"""
  username: String!
}

type UserMysql {
  active: Boolean!
  authentication_token: String!
  created_at: DateTime!
  customer_id: Float!
  email: String!
  id: Float!
  identification: String!
  last_login_at: DateTime!
  name: String!
  owner_user_id: Float!
  password: String!
  role_id: Float!
  shop_id: Float!
  user: String!
  wholesale_member: Boolean!
}

type Warehouse {
  """Identificador de mongo"""
  _id: String!

  """Estado de la bodega"""
  active: Boolean!

  """ID Mysql"""
  id: Float @deprecated(reason: "Mysql migración")

  """Nombre de la bodega"""
  name: String!

  """Tienda a la que pertenece"""
  shop: Shop!

  """Usuario que creó el usuario"""
  user: User!
}
